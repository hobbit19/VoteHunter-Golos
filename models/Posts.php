<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "posts".
 *
 * @property int $id
 * @property string $title
 * @property string $body
 * @property string $encoded
 * @property string $video_url
 * @property string $price
 * @property string $secret_key
 * @property string $permlink
 * @property string $parentPermlink
 * @property int $not_encrypted
 * @property int $user_id
 * @property int $cat_id
 * @property int $patrons_only
 * @property string $thumbnail
 */
class Posts extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'posts';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['body', 'encoded'], 'string'],
            [['price'], 'number'],
            [['not_encrypted'], 'integer'],
            [['title'], 'string', 'max' => 256],
            [['video_url', 'secret_key', 'permlink'], 'string', 'max' => 512],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
        ];
    }

    public function beforeSave($insert)
    {
        if($insert) {

        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    public function getAuthor()
    {
        return self::hasOne(Users::className(), ['id' => 'user_id']);
    }

    public function decryptData($strEncryptedData)
    {
        $objAnubis = new Anubis();
        $objAnubis->setKey($this->secret_key);
        return $objAnubis->decrypt(base64_decode($strEncryptedData));
    }

}
